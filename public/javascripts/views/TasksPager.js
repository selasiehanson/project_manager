  // Generated by CoffeeScript 1.3.3
(function() {

  (function(views) {
    var params;
    params = {
      events: {
        'click a.first': 'gotoFirst',
        'click a.previous': 'gotoPrevious',
        'click a.next': 'gotoNext',
        'click a.last': 'gotoLast'
      },
      initialize: function() {
        var self, tpl;
        this.collection.on('reset', this.render, this);
        self = this;
        tpl = this.options.template;
        this.template = _.template($(tpl).html());
        this.stats = this.options.stats;
      },
      onClose: function() {
        this.collection.off('reset', this.render);
      },
      modelRemoved: function(e) {
        var self;
        self = this;
        this.collection.clean();
        this.collection.fetch({
          success: function(col, res) {
            var currentPage, info, totalPages;
            self.collection.pager();
            info = self.collection.info();
            totalPages = info.totalPages;
            currentPage = info.currentPage;
            if (currentPage > totalPages) {
              self.collection.previousPage();
            }
          },
          silent: true
        });
      },
      render: function() {
        var html;
        $(this.el).empty();
        html = this.template({
          page: this.collection.info(),
          stats: this.stats
        });
        $(this.el).html(html);
        return this;
      },
      gotoFirst: function(e) {
        e.preventDefault();
        this.collection.goTo(1);
      },
      gotoPrevious: function(e) {
        e.preventDefault();
        this.collection.previousPage();
      },
      gotoNext: function(e) {
        var currentPage, info, totalPages;
        e.preventDefault();
        info = this.collection.info();
        totalPages = info.totalPages;
        currentPage = info.currentPage;
        if (currentPage < totalPages) {
          this.collection.nextPage();
        }
      },
      gotoLast: function(e) {
        e.preventDefault();
        this.collection.goTo(this.collection.information.lastPage);
      }
    };
    views.TasksPager = Backbone.View.extend(params);
  })(app.views);

}).call(this);
