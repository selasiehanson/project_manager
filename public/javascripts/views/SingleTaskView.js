// Generated by CoffeeScript 1.3.3
(function() {

  (function(views) {
    views.SingleTaskView = Backbone.View.extend({
      tagName: 'tr',
      template: _.template($('#task-tmpl').text()),
      events: {
        'mouseover .menu-item': 'showControls',
        'mouseout .menu-item': 'hideControls',
        'click button.delete_link': 'deleteTask',
        'click button.edit_link': 'editTask',
        'click .checkbox': 'toggleDone',
        'keypress .edit': 'updateOnEnter',
        'click .menu-item': 'makeActive'
      },
      initialize: function() {
        this.model.on('change', this.render, this);
        this.model.on('destroy', this.remove, this);
      },
      showControls: function(e) {
        $(e.currentTarget).find(".controls").show();
      },
      hideControls: function(e) {
        $(e.currentTarget).find(".controls").hide();
      },
      deleteTask: function() {
        this.model.clear();
      },
      editTask: function() {
        this.$el.addClass("editing");
        this.input.val(this.model.get('title'));
        this.input.focus;
      },
      updateOnEnter: function(e) {
        if (e.keyCode === 13) {
          this.close();
        }
      },
      close: function() {
        var value;
        value = this.input.val();
        if (!value) {
          this.clear();
        }
        this.model.save({
          title: value
        });
        this.$el.removeClass("editing");
      },
      onClose: function() {
        this.model.off("change", this.render);
        this.model.off("destroy", this.remove);
      },
      render: function() {
        var html, title;
        title = this.model.get("title");
        title = title[0].toUpperCase() + title.slice(1);
        this.model.set({
          title: title
        });
        html = this.template({
          task: this.model
        });
        $(this.el).html(html);
        this.input = this.$('.edit');
        return this;
      },
      makeActive: function() {},
      toggleDone: function(e) {
        var item, status;
        this.model.toggle();
        item = $(this.el).find(".the-item a");
        status = this.model.get("status");
        if (status === "done") {
          item.addClass("done");
        } else if (status === "pending") {
          item.removeClass("done");
        }
      }
    });
  })(app.views);

}).call(this);
